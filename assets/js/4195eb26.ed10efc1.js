"use strict";(self.webpackChunkweebogitops=self.webpackChunkweebogitops||[]).push([[735],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(k,s(s({ref:t},c),{},{components:n})):a.createElement(k,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},s="Husky",i={unversionedId:"SubProject/Husky",id:"SubProject/Husky",title:"Husky",description:"Has of now we are in needs of more details about the configuration.",source:"@site/docs/SubProject/Husky.md",sourceDirName:"SubProject",slug:"/SubProject/Husky",permalink:"/WeeboGitOps/docs/SubProject/Husky",draft:!1,editUrl:"https://github.com/batleforc/WeeboGitOps/tree/Doc/Main/docs/SubProject/Husky.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Goal",permalink:"/WeeboGitOps/docs/Archi/Goal"},next:{title:"Hot Reload",permalink:"/WeeboGitOps/docs/SubProject/HotReload"}},l={},p=[{value:"Package.json",id:"packagejson",level:2},{value:"Template husky",id:"template-husky",level:3},{value:"Install husky",id:"install-husky",level:3},{value:"Usage",id:"usage",level:2},{value:"prepare-commit-msg",id:"prepare-commit-msg",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"husky"},"Husky"),(0,r.kt)("p",null,"Has of now we are in needs of more details about the configuration."),(0,r.kt)("h2",{id:"packagejson"},"Package.json"),(0,r.kt)("h3",{id:"template-husky"},"Template husky"),(0,r.kt)("p",null,"In the case of Husky, we first need a base package.json"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"package.json","package.json":!0},'{\n  "name": "SUBPROJECT NAME",\n  "version": "0.0.1",\n  "main": "",\n  "author": "AUTHOR",\n  "license": "MIT",\n  "dependencies": {},\n  "devDependencies": {\n    "husky": "^7.0.0"\n  },\n  "scripts": {\n    "prepare": "husky install"\n  }\n}\n')),(0,r.kt)("p",null,"Inside this file we find a ref to devDependencies husky and a scripts named prepare who is exectued after a dependencies install like ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install"),"."),(0,r.kt)("h3",{id:"install-husky"},"Install husky"),(0,r.kt)("p",null,"If you already have a package.json file, you can use the following command to install Husky:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install husky --save-dev\n# or\nyarn add husky --dev\n")),(0,r.kt)("p",null,"After the dependency is added we need to enable GitHooks and edit the conf:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'npx husky install\nnpm pkg set scripts.prepare "husky install"\n')),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"prepare-commit-msg"},"prepare-commit-msg"),(0,r.kt)("p",null,"At the moment Husky exist, is installed but do nothing. In the first place we want to use GitMoji who allow the user to complete commit with emoji."),(0,r.kt)("p",null,"Has we want to use the gitmoji package we first need to install it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install gitmoji-cli --save-dev\n# or\nyarn add gitmoji-cli --dev\n")),(0,r.kt)("p",null,"Once the package is installed we're going to setup the prepare-commit-msg script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'npx husky add .husky/prepare-commit-msg "yarn gitmoji --hook $1 $2"\n')),(0,r.kt)("p",null,"This command create the wanted hook and indicate that we want to use the gitmoji package. In order to use it, edit a files and commit what you changed."))}u.isMDXComponent=!0}}]);